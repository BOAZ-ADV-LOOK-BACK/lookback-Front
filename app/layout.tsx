import type { Metadata } from "next";
import localFont from "next/font/local";
import { Inter } from 'next/font/google';
import { GoogleOAuthProvider } from '@react-oauth/google'; // 구글 OAuth 라이브러리 추가
import { cn } from '@/lib/utils';
import "./globals.css";
import Head from "next/head";

const fontHeading = Inter({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-heading',
});

const fontBody = Inter({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-body',
});

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Look-back",
  description: "Generated by create next app",
  icons: {
    icon: {
      url: '/favicon.png',
      type: 'image/png',
    },
    shortcut: { url: '/favicon.png', type: 'image/png' },
  },
};

if (!process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID) {
  throw new Error('Missing Google Client ID');
  // console.log('Missing Google Client ID'); // 로컬에서 작업하기 위해서는 error throw가 아니라 console.log 처리
}

const clientId: string = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID;

export default function Layout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body 
        className={cn(
          'antialiased',
          fontHeading.variable,
          fontBody.variable
        )}
      >
        <GoogleOAuthProvider clientId={clientId}>  {/* GoogleOAuthProvider 추가 */}
          {children}
        </GoogleOAuthProvider>
      </body>
    </html>
  );
}
import React, { useState, useEffect } from 'react';